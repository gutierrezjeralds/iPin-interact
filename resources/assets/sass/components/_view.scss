.view-post-display{
    .holder-media-photo{
        .num-carousel-items{
            position: absolute;
            z-index: 10;
            right: 10px;
            font-weight: bold;
            font-size: 16px;
        }
    }
    .holder-caption{
        .caption-parent{
            .caption-child{
                .edit-caption{
                    .edit-caption-here{
                        border: 1px solid $ccc;
                        min-height: 100px;
                        -webkit-box-shadow: 0 2px 5px 0 rgba(0,0,0,.16), 0 2px 10px 0 rgba(0,0,0,.12);
                        box-shadow: 0 2px 5px 0 rgba(0,0,0,.16), 0 2px 10px 0 rgba(0,0,0,.12);
                    }
                    #editPostSave{
                        border: 2px solid #00C851 !important;
                        &:hover, &:active, &:focus{
                            border: 2px solid #00e25b!important
                        }
                    }
                }
            }
        }
    }
}

/* Isotope Transitions
------------------------------- */
.isotope,
.isotope .item-view {
  -webkit-transition-duration: 0.8s;
     -moz-transition-duration: 0.8s;
      -ms-transition-duration: 0.8s;
       -o-transition-duration: 0.8s;
          transition-duration: 0.8s;
}

.isotope {
  -webkit-transition-property: height, width;
     -moz-transition-property: height, width;
      -ms-transition-property: height, width;
       -o-transition-property: height, width;
          transition-property: height, width;
}

.isotope .item {
  -webkit-transition-property: -webkit-transform, opacity;
     -moz-transition-property:    -moz-transform, opacity;
      -ms-transition-property:     -ms-transform, opacity;
       -o-transition-property:         top, left, opacity;
          transition-property:         transform, opacity;
}
  
  
/* responsive media queries */

@media (max-width: 768px) {
    .isotope .item-view {
        position: static ! important;
        -webkit-transform: translate(0px, 0px) ! important;
       -moz-transform: translate(0px, 0px) ! important;
        transform: translate(0px, 0px) ! important;
    }
}